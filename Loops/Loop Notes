Python Loops:
 Python has two primitive loop commands:
 1.   while loops
 2.   for loops

# ***************************************************************************************
for vs while:
Usually we’d use the for loop when the number of iterations is fixed.
For example, iterating over a fixed list of items in a shopping list.

The while loop is useful in cases
when the number of iterations isn’t known and depends on some calculations
and conditions in the code block of the loop.

# ***************************************************************************************
The break Statement:
With the break statement we can stop the loop even if the while condition is true


The continue Statement:
With the continue statement we can stop the current iteration of the loop, and continue with the next.

# ***************************************************************************************
Python For Loops:
A for loop is used for iterating over a sequence (that is either a list, a tuple, a dictionary, a set, or a string).

# ***************************************************************************************
The range() Function:
To loop through a set of code a specified number of times, we can use the range() function.

The range() function returns a sequence of numbers, starting from 0 by default,
and increments by 1 (by default), and ends at a specified number.

The range() function defaults to 0 as a starting value,
however it is possible to specify the starting value by adding a parameter:
range(2, 6), which means values from 2 to 6 (but not including 6).

The range() function defaults to increment the sequence by 1,
however it is possible to specify the increment value by adding a third parameter:
range(2, 30, 3):

# ***************************************************************************************
Else in For Loop:
The else keyword in a for loop specifies a block of code to be executed when the loop is finished.

# ***************************************************************************************
Nested Loops:
A nested loop is a loop inside a loop.
The "inner loop" will be executed one time for each iteration of the "outer loop".

# ***************************************************************************************
The pass statement:
for loops cannot be empty,
but if you for some reason have a for loop with no content, put in the pass statement to avoid getting an error.

# ***************************************************************************************
Exceptions:

When an exception occurs, the program immediately stops.

common exceptions:
1. ImportError: an import fails.
2. IndexError: a list is indexed with an out-of-range number.
3. NameError: an unknown variable is used.
4. SyntaxError : the code can't be parsed properly
5. TypeError: A function is called on a value of an inappropriate type.
6. ValueError: A function is called on a value of the correct type, but with an inappropriate value.

!!! Python has several other built-in exceptions, such as ZeroDivisionError and OSError.
    Third-party libraries also often define their own exceptions.

***********************************************************************************************************
Exception Handling:

To handle exceptions, and to call code when an exception occurs, you can use a try/except statement.
The try block contains code that might throw an exception.
 If that exception occurs, the code in the try block stops being executed, and the code in the except block is run.
 If no error occurs, the code in the except block doesn't run.


A try statement can have multiple different except blocks to handle different exceptions.
Multiple exceptions can also be put into a single except block using parentheses,
to have the except block handle all of them.

An except statement without any exception specified will catch all errors.
These should be used sparingly, as they can catch unexpected errors and hide programming mistakes.

!!! Exception handling is particularly useful when dealing with user input.
